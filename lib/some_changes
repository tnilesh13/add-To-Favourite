/*
MY PROMPT 

i am building a platform where user can build an app using drag and drop on website and when they click build button on website than a project gets created on my firebase account for the  user and their apk file get's build using shelll script commands but now i want to create the user project on their own firebase account and not on mine.

*/



import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';

final FirebaseAuth _auth = FirebaseAuth.instance;

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: SignInScreen(),
    );
  }
}

class SignInScreen extends StatefulWidget {
  @override
  _SignInScreenState createState() => _SignInScreenState();
}

class _SignInScreenState extends State<SignInScreen> {
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Sign In'),
      ),
      body: Padding(
        padding: EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            TextField(
              controller: _emailController,
              decoration: InputDecoration(labelText: 'Email'),
            ),
            TextField(
              controller: _passwordController,
              decoration: InputDecoration(labelText: 'Password'),
              obscureText: true,
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                signIn(_emailController.text, _passwordController.text);
              },
              child: Text('Sign In'),
            ),
          ],
        ),
      ),
    );
  }

  Future<void> signIn(String email, String password) async {
    try {
      UserCredential userCredential =
          await _auth.signInWithEmailAndPassword(
        email: email,
        password: password,
      );
      print('User signed in: ${userCredential.user!.uid}');
      // Navigate to the next screen upon successful sign-in
    } catch (e) {
      print("Failed to sign in: $e");
      // Show error message to the user
    }
  }
}












// Step 2: Project Creation
// You can call the function createProjectInUserAccount whenever necessary, typically after successful user authentication.


import 'package:http/http.dart' as http;

Future<void> createProjectInUserAccount(String userId) async {
  final response = await http.post(
    Uri.parse('YOUR_NODE_BACKEND_URL/createProject'),
    body: {'userId': userId},
  );

  if (response.statusCode == 200) {
    print('Project created successfully');
  } else {
    print('Failed to create project: ${response.body}');
  }
}






// server.js

const express = require('express');
const app = express();
const PORT = 5000;

app.use(express.json());

app.post('/api/signin', (req, res) => {
  const { email, password } = req.body;
  // Authenticate user with email and password
  // Your authentication logic here
  if (authenticated) {
    res.status(200).send('User signed in successfully');
  } else {
    res.status(401).send('Authentication failed');
  }
});

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
